apiVersion: v1
kind: Template
labels:
  template: portfolio-liberty-deploy
metadata:
  name: portfolio-liberty-deploy
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 9080-tcp
      port: 9080
      targetPort: 9080
      protoco: TCP
    - name: 9443-tcp
      port: 9443
      targetPort: 9443
      protoco: TCP
    - name: http
      port: 9082
      targetPort: 9082
      protoco: TCP
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  id: ${APPLICATION_NAME}-http
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    to:
      name: ${APPLICATION_NAME}
    port:
      targetPort: 9443-tcp
    tls:
      termination: passthrough
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JDBC_HOST
            valueFrom:
              secretKeyRef:
                name: db2
                key: host
          - name: JDBC_PORT
            valueFrom:
              secretKeyRef:
                name: db2
                key: port
          - name: JDBC_DB
            valueFrom:
              secretKeyRef:
                name: db2
                key: db
          - name: JDBC_ID
            valueFrom:
              secretKeyRef:
                name: db2
                key: id
          - name: JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db2
                key: pwd
          - name: MQ_ID
            valueFrom:
              secretKeyRef:
                name: mq
                key: id
          - name: MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mq   
                key: pwd
          - name: MQ_HOST
            valueFrom:
              secretKeyRef:
                name: mq
                key: host
          - name: MQ_PORT
            valueFrom:
              secretKeyRef:
                name: mq   
                key: port
          - name: MQ_CHANNEL
            valueFrom:
              secretKeyRef:
                name: mq   
                key: channel
          - name: MQ_QUEUE_MANAGER
            valueFrom:
              secretKeyRef:
                name: mq   
                key: queue-manager
          - name: MQ_QUEUE
            valueFrom:
               secretKeyRef:
                 name: mq   
                 key: queue
          - name: WATSON_URL
            valueFrom:
              secretKeyRef:
                name: watson
                key: url
          - name: COM_IBM_HYBRID_CLOUD_SAMPLE_STOCKTRADER_PORTFOLIO_CLIENT_WATSONCLIENT_MP_REST_URL
            valueFrom:
              secretKeyRef:
                name: watson
                key: url
          - name: WATSON_ID
            valueFrom:
              secretKeyRef:
                name: watson
                key: id
                optional: true
          - name: WATSON_PWD
            valueFrom:
              secretKeyRef:
                name: watson
                key: pwd
          - name: ODM_URL
            valueFrom:
              secretKeyRef:
                name: odm
                key: url
                optional: true
          - name: COM_IBM_HYBRID_CLOUD_SAMPLE_STOCKTRADER_PORTFOLIO_CLIENT_ODMCLIENT_MP_REST_URL
            valueFrom:
              secretKeyRef:
                name: odm
                key: url
                optional: true
          - name: ODM_ID
            valueFrom:
              secretKeyRef:
                name: odm
                key: id
                optional: true
          - name: ODM_PWD
            valueFrom:
              secretKeyRef:
                name: odm
                key: pwd
                optional: true
          - name: KAFKA_TOPIC
            valueFrom:
              secretKeyRef:
                name: kafka
                key: topic
                optional: true
          - name: KAFKA_ADDRESS
            valueFrom:
              secretKeyRef:
               name: kafka
               key: address
               optional: true
          - name: KAFKA_USER
            valueFrom:
             secretKeyRef:
               name: kafka
               key: user
               optional: true
          - name: KAFKA_API_KEY
            valueFrom:
             secretKeyRef:
                name: kafka
                key: api-key
                optional: true
          - name: KAFKA_KEYSTORE
            valueFrom:
              secretKeyRef:
                name: kafka
                key: keystore
                optional: true
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: jwt 
                key: audience
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: jwt
                key: issuer
          - name: STOCK_QUOTE_URL
            valueFrom:
              configMapKeyRef:
                name: urls
                key: stock-quote
                optional: true
          - name: COM_IBM_HYBRID_CLOUD_SAMPLE_STOCKTRADER_PORTFOLIO_CLIENT_STOCKQUOTECLIENT_MP_REST_URL
            valueFrom:
              configMapKeyRef:
                name: urls
                key: stock-quote
                optional: true
          - name: TRADE_HISTORY_URL
            valueFrom:
              configMapKeyRef:
               name: urls
               key: trade-history
               optional: true
          - name: COM_IBM_HYBRID_CLOUD_SAMPLE_STOCKTRADER_PORTFOLIO_CLIENT_TRADEHISTORYCLIENT_MP_REST_URL
            valueFrom:
              configMapKeyRef:
               name: urls
               key: trade-history
               optional: true
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: json
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          volumeMounts:
          - mountPath: /keystores
            name: kafka-keystore-volume
            readOnly: true
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
          ports:
          - containerPort: 9080
            name: 9080-tcp
            protocol: TCP
          - containerPort: 9443
            name: 9443-tcp
            protocol: TCP
          - containerPort: 9082
            name: http
            protocol: TCP
        volumes:
        - name: kafka-keystore-volume
          secret:
            secretName: kafka-keystore
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 90
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 5
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationGracePeriodSeconds: 60
        dnsPolicy: ClusterFirst
        serviceAccountName: websphere
        serviceAccount: websphere
        securityContext:
          runAsUser: 1001
          runAsNonRoot: true
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStream
          name: ${APPLICATION_NAME}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: false
  value: portfolio-liberty
